---
swagger: "2.0"
info:
  version: "2024-05-01T14:16:51Z"
  title: "restaurante-gateway"
host: "snak196xzh.execute-api.us-east-1.amazonaws.com"
basePath: "/default"
schemes:
- "https"
paths:
  /:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /env:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/env"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /health:
    get:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/health"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http"
  /orders:
    post:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "authorizationToken"
        in: "header"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "GET"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.header.authorizationToken: "method.request.header.authorizationToken"
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_templates"
        type: "http_proxy"
  /orders/{id}/cancel:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/cancel"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/confirmation:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/confirmation"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/delivered:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/delivered"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/in-preparation:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/in-preparation"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/item:
    post:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/item"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/item/{idItem}:
    delete:
      produces:
      - "application/json"
      parameters:
      - name: "idItem"
        in: "path"
        required: true
        type: "string"
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "DELETE"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/item/{idItem}"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.idItem: "method.request.path.idItem"
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/payment:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/payment"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/payment/webhook:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/payment/webhook"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/ready-for-delivery:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/ready-for-delivery"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /orders/{id}/sent-for-delivery:
    put:
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      security:
      - restaurant-gateway-auth: []
      x-amazon-apigateway-integration:
        httpMethod: "PUT"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/orders/{id}/sent-for-delivery"
        responses:
          default:
            statusCode: "200"
        requestParameters:
          integration.request.path.id: "method.request.path.id"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
  /sign-in:
    post:
      produces:
      - "application/json"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/Empty"
      x-amazon-apigateway-integration:
        httpMethod: "POST"
        uri: "http://a1c47ab0f2718452696a3fab38b7253b-1009003842.us-east-1.elb.amazonaws.com:8080/customers/sign-in"
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        type: "http_proxy"
securityDefinitions:
  restaurant-gateway-auth:
    type: "apiKey"
    name: "authorizationToken"
    in: "header"
    x-amazon-apigateway-authtype: "custom"
    x-amazon-apigateway-authorizer:
      authorizerUri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:252506243013:function:fiap-tech-challenge-authorizer-lambda/invocations"
      authorizerResultTtlInSeconds: 0
      identitySource: "method.request.header.authorizationToken"
      type: "request"
definitions:
  Empty:
    type: "object"
    title: "Empty Schema"
